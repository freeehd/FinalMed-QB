const jQuery=window.jQuery;jQuery(document).ready(n=>{const c=n("#wqb-app-root"),b=window.wqb_data.ajax_url,u=window.wqb_data.nonce;let i={},v=null,g=null,k=0;function V(t){return typeof t!="string"?!1:/<\/?[a-z][\s\S]*>/i.test(t)}function I(t){if(!t)return"";if(/<[a-z][\s\S]*>/i.test(t))return t;let e=String(t);return e=e.replace(/\*{1,2}(.*?)\*{1,2}/g,(s,a)=>s.startsWith("**")?`<strong>${a}</strong>`:`<em>${a}</em>`),e=e.replace(/`(.*?)`/g,"<code>$1</code>"),e=e.replace(/\r\n|\r|\n/g,"<br>"),e}function Q(t){return t?V(t)?t:String(t).replace(/\r\n|\r|\n/g," "):""}function Y(t){if(!t||t.trim()==="")return"No explanation available.";const e=t.split(`
`).filter(a=>a.trim()!=="");let s="";return e.forEach((a,r)=>{const o=a.trim();if(r===0){const l=o.replace(/(Correct answer: [A-E]\))/,"<strong>$1</strong>");s+=`<div class="explanation-block correct-answer"><span class="explanation-icon">\u2705</span><div class="explanation-text">${l}</div></div>`}else{const l=o.match(/^(?:<p>)?(?:❌\s*)?([A-E]\))(.+)/);let d;if(l){const w=l[1],p=l[2];d=`<strong>${w}</strong>${p}`}else d=o.replace(/^❌\s*/,"");s+=`<div class="explanation-block incorrect-answer"><span class="explanation-icon">\u274C</span><div class="explanation-text">${d}</div></div>`}}),s}function J(){const t=window.innerWidth<=480,e=window.innerWidth>480&&window.innerWidth<=768,s=window.innerWidth>768&&window.innerWidth<=1024,a=window.innerWidth>1024;return t||e?5:10}c.on("click","#wqb-start-practice",()=>N("practice")),c.on("click","#wqb-start-mock-test",()=>N("mock")),c.on("click","#wqb-submit-answer",tt),c.on("click","#wqb-next-question",()=>P("next")),c.on("click","#wqb-prev-question",()=>P("prev")),c.on("click","#wqb-skip-question",()=>P("next")),c.on("click","#wqb-return-to-lobby",()=>window.location.href="/staging-area"),c.on("click",".wqb-question-nav-btn",st),c.on("change",".wqb-system-checkbox",function(){n(this).closest(".wqb-system").find('.wqb-specialties input[type="checkbox"]').prop("checked",n(this).prop("checked"))}),c.on("change",".wqb-specialty-checkbox",function(){n(this).prop("checked")||n(this).closest(".wqb-system").find(".wqb-system-checkbox").prop("checked",!1)}),c.on("click",".wqb-category-toggle",function(t){t.preventDefault();const e=n(this),s=e.closest(".wqb-category-row").siblings(".wqb-category-children");e.toggleClass("open"),e.hasClass("open")?e.text("-"):e.text("+"),s.slideToggle(200)}),c.on("change",".wqb-category-checkbox-parent",function(){n(this).closest(".wqb-category-item").find('.wqb-category-children input[type="checkbox"]').prop("checked",n(this).prop("checked")),y()}),c.on("change","#wqb-select-all-categories",function(){const t=n(this).prop("checked");n('.wqb-category-tree input[type="checkbox"]:not(#wqb-select-all-categories)').prop("checked",t),y()}),c.on("change",'.wqb-category-tree input[type="checkbox"]:not(#wqb-select-all-categories):not(.wqb-category-checkbox-parent)',()=>{y()});function y(){const t=n('.wqb-category-tree input[type="checkbox"]:checked:not(#wqb-select-all-categories)'),e=t.map(function(){return Number.parseInt(n(this).val())}).get();let s=0;window.wqbCategoryTree&&(s=X(window.wqbCategoryTree,e));const a=n("#wqb-selected-questions-counter");a.length&&a.text(`${s.toLocaleString()} unsolved questions selected`);const r=n('.wqb-category-tree input[type="checkbox"]:not(#wqb-select-all-categories)'),o=n("#wqb-select-all-categories");o.length&&(t.length===0?o.prop("indeterminate",!1).prop("checked",!1):t.length===r.length?o.prop("indeterminate",!1).prop("checked",!0):o.prop("indeterminate",!0).prop("checked",!1))}function X(t,e){let s=0;const a=new Set;function r(o){if(!a.has(o.id)){if(e.includes(o.id)){if(!(o.children&&o.children.length>0)){const d=o.total_questions-o.user_answered;s+=d}a.add(o.id)}o.children&&o.children.length>0&&o.children.forEach(l=>r(l))}}return t.forEach(o=>r(o)),s}c.on("click","#wqb-finish-test-btn",H),c.on("click","#wqb-finish-session-btn",F),c.on("click",".wqb-feedback-toggle",function(){n(this).toggleClass("active").next(".wqb-feedback-content").slideToggle(200)}),c.on("click","#wqb-submit-feedback",et),c.on("click","#wqb-resume-session",t=>{t.preventDefault(),B()}),c.on("click","#wqb-start-new-session",L),c.on("click","#wqb-resume-session-lobby",t=>{t.preventDefault(),B()}),c.on("click",".wqb-resume-session-btn",function(t){t.preventDefault();const e=n(this).data("session-id");K(e)}),c.on("click",".wqb-close-session-btn",function(t){t.preventDefault();const e=n(this).data("session-id");Z(e)}),c.on("click","#wqb-end-review",it);let O;n(window).on("resize",()=>{clearTimeout(O),O=setTimeout(()=>{c.find(".wqb-practice-view, .wqb-mock-test-view").length&&i.question_ids&&U()},250)});function lt(){n.ajax({url:b,type:"POST",data:{action:"wqb_check_active_session",nonce:u},dataType:"json",success:t=>{t.success&&t.data.has_active_session?G(t.data.session_data):h()},error:(t,e,s)=>{h()}})}function G(t){const e=`

      <div
class="wqb-session-resume-dialog">
        <div class="wqb-dialog-content">
          <h3>Resume Your Session</h3>
          <p>You have an active ${t.mode==="mock"?"mock test":"practice"} session with ${t.answered_count} of ${t.total_questions} questions completed.</p>
          <div class="wqb-dialog-actions">
            <button id="wqb-resume-session" class="wqb-button-primary">Resume Session</button>
            <button id="wqb-start-new-session" class="wqb-button-secondary">Start New Session</button>
          </div>
        </div>
      </div>
    `;c.html(e)}function B(){n.ajax({url:b,type:"POST",data:{action:"wqb_resume_session",nonce:u},dataType:"json",success:t=>{if(t.success){i=t.data.session_data,v=t.data.session_id;const e={question:t.data.question,current:t.data.current_index+1,total:t.data.total_questions,is_attempted:t.data.is_attempted,user_answer:t.data.user_answer};t.data.mode==="mock"?S(e):x(e),t.data.is_attempted&&C({is_correct:t.data.is_correct,correct_index:t.data.correct_index,explanation:t.data.explanation,answer_distribution:t.data.answer_distribution,total_attempts:t.data.total_attempts},t.data.user_answer,!0)}else alert(t.data.message),h()},error:(t,e,s)=>{alert("Failed to resume session. Please try again."),h()}})}function K(t){n.ajax({url:b,type:"POST",data:{action:"wqb_resume_session",session_id:t,nonce:u},dataType:"json",success:e=>{if(e.success){i=e.data.session_data,v=e.data.session_id;const s={question:e.data.question,current:e.data.current_index+1,total:e.data.total_questions,is_attempted:e.data.is_attempted,user_answer:e.data.user_answer};e.data.mode==="mock"?S(s):x(s),e.data.is_attempted&&C({is_correct:e.data.is_correct,correct_index:e.data.correct_index,explanation:e.data.explanation,answer_distribution:e.data.answer_distribution,total_attempts:e.data.total_attempts},e.data.user_answer,!0)}else alert(e.data.message),h()},error:(e,s,a)=>{alert("Failed to resume session. Please try again."),h()}})}function Z(t){n.ajax({url:b,type:"POST",data:{action:"wqb_close_session",session_id:t,nonce:u},dataType:"json",success:e=>{e.success?n(`.wqb-active-session-item[data-session-id="${t}"]`).fadeOut(300,function(){n(this).remove(),n(".wqb-active-session-item").length===0&&n(".wqb-active-sessions-container").fadeOut(300)}):alert(e.data.message)},error:(e,s,a)=>{alert("Failed to close session. Please try again.")}})}function L(){n.ajax({url:b,type:"POST",data:{action:"wqb_start_new_session",nonce:u},dataType:"json",success:t=>{t.success||alert("Failed to start new session: "+t.data.message),h()}})}function N(t="practice"){i={correct:0,attempted:0,mode:t,defaults:i.defaults};const e=n('input[name="wqb_categories[]"]:checked').map(function(){return n(this).val()}).get(),s=n("#wqb-status-filter").val();c.html('<div class="wqb-loader">Building your session...</div>'),n.ajax({url:b,type:"POST",data:{action:"wqb_start_session",nonce:u,categories:e,status_filter:s,mode:t},dataType:"json",success:a=>{if(a.success){i={...i,question_ids:a.data.session_data.question_ids,current_index:a.data.current_index,user_answers:a.data.session_data.user_answers,question_states:a.data.session_data.question_states||{},total:a.data.total_questions},v=a.data.session_id;const r={question:a.data.question,current:a.data.current_index+1,total:a.data.total_questions};t==="mock"?(S(r),at(i.defaults.time_limit*60)):x(r)}else{let r="An unknown error occurred. Please try again.";a.data&&a.data.message?r=a.data.message:typeof a.data=="string"&&(r=a.data),alert(r),h()}}})}function tt(){const t=n('input[name="wqb_answer"]:checked');if(t.length===0){alert("Please select an answer.");return}const e=t.val(),s=t.closest(".wqb-practice-view").data("question-id");n.ajax({url:b,type:"POST",data:{action:"wqb_submit_answer",nonce:u,question_id:s,answer_index:e,session_id:v},dataType:"json",success:a=>{a.success?(a.data.is_correct&&i.correct++,i.attempted++,i.user_answers[s]=Number.parseInt(e),i.question_states[s]=a.data.is_correct?"correct":"incorrect",C(a.data,e),U()):alert(a.data.message)}})}function et(){const t=n(".wqb-practice-view").data("question-id"),e=n("#wqb-feedback-text").val().trim();if(!e){alert("Please enter your feedback before submitting.");return}n("#wqb-submit-feedback").prop("disabled",!0).text("Sending..."),n("#wqb-feedback-text").prop("disabled",!0),n.ajax({url:b,type:"POST",data:{action:"wqb_submit_feedback",nonce:u,question_id:t,feedback_text:e},dataType:"json",success:s=>{var a;s.success?(alert("Thank you for your feedback! It has been submitted."),n(".wqb-feedback-section").html('<p class="wqb-feedback-submitted-message">Feedback submitted for this question.</p>')):(alert("Failed to submit feedback: "+(((a=s.data)==null?void 0:a.message)||"Unknown error.")),n("#wqb-submit-feedback").prop("disabled",!1).text("Send Feedback"),n("#wqb-feedback-text").prop("disabled",!1))},error:(s,a,r)=>{console.error("AJAX Error submitting feedback:",{xhr:s,status:a,error:r}),alert("A network error occurred while submitting feedback. Please try again."),n("#wqb-submit-feedback").prop("disabled",!1).text("Send Feedback"),n("#wqb-feedback-text").prop("disabled",!1)}})}function P(t){let e=i.current_index;if(t==="next"?e++:t==="prev"&&e--,e<0||e>=i.total)if(e>=i.total){i.mode==="mock"?H():F();return}else return;R(e)}function st(){const t=Number.parseInt(n(this).data("question-index"));R(t)}function R(t){n.ajax({url:b,type:"POST",data:{action:"wqb_navigate_question",nonce:u,target_index:t,session_id:v},dataType:"json",success:e=>{if(e.success){i.current_index=e.data.current_index,i.user_answers=e.data.session_data.user_answers,i.question_states=e.data.session_data.question_states||{};const s={question:e.data.question,current:e.data.current_index+1,total:i.total,is_attempted:e.data.is_attempted,user_answer:e.data.user_answer};i.mode==="mock"?S(s):x(s),e.data.is_attempted&&C({is_correct:e.data.is_correct,correct_index:e.data.correct_index,explanation:e.data.explanation,answer_distribution:e.data.answer_distribution,total_attempts:e.data.total_attempts},e.data.user_answer,!0)}else alert(e.data.message)}})}function at(t){k=t,g&&clearInterval(g),g=setInterval(()=>{const e=Math.floor(k/60),s=k%60;n("#wqb-timer").text(`${e.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`),--k<0&&(clearInterval(g),n("#wqb-timer").text("Time Up!"),H())},1e3)}function H(){g&&clearInterval(g),c.html('<div class="wqb-loader">Calculating your results...</div>'),n.ajax({url:b,type:"POST",data:{action:"wqb_finish_mock_test",nonce:u,session_id:v},dataType:"json",success:t=>{t.success?nt(t.data):(alert(t.data.message),h())}})}function it(){if(!v){alert("No active session found.");return}if(!i.question_ids||!Array.isArray(i.question_ids)){console.error("sessionData.question_ids is missing or not an array:",i.question_ids),alert("Session data is incomplete. Please try again.");return}(!i.user_answers||typeof i.user_answers!="object")&&(console.error("sessionData.user_answers is missing or not an object:",i.user_answers),i.user_answers={}),(!i.question_states||typeof i.question_states!="object")&&(console.error("sessionData.question_states is missing or not an object:",i.question_states),i.question_states={}),(!i.total||typeof i.total!="number")&&(console.error("sessionData.total is missing or not a number:",i.total),i.total=i.question_ids.length);const t=i.question_ids.filter(s=>i.user_answers.hasOwnProperty(s)),e={question_ids:t,user_answers:i.user_answers,question_states:i.question_states,mode:i.mode||"practice",total_questions:t.length,current_index:0};sessionStorage.setItem("wqb_review_data",JSON.stringify(e)),n.ajax({url:b,type:"POST",data:{action:"wqb_close_session",nonce:u,session_id:v},dataType:"json",success:s=>{v=null,i=null;const a=new URL(window.location.href);a.searchParams.set("wqb_review","1"),window.location.href=a.toString()},error:(s,a,r)=>{console.error("Error closing session:",r);const o=new URL(window.location.href);o.searchParams.set("wqb_review","1"),window.location.href=o.toString()}})}function x({question:t,current:e,total:s,is_attempted:a=!1,user_answer:r=null}){i.current=e,i.total=s;let o=`
            <div class="wqb-practice-view" data-question-id="${t.id}">
                <div class="wqb-practice-header">
                    <div class="wqb-question-counter">Question ${e} of ${s}</div>
                </div>
                
                <!-- NEW: Top Navigation Bar -->
                <div class="wqb-top-navigation">
                    <div class="wqb-nav-left">
                        <button class="wqb-breadcrumb-btn wqb-button-secondary" onclick="window.location.href='/staging-area'">
                            <span class="wqb-button-icon">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1 -2 2H5a2 2 0 0 1 -2 -2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <polyline points="9,22 9,12 15,12 15,22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                            </span>
                            Home
                        </button>
                        <div class="wqb-breadcrumb-separator">\u203A</div>
                        <span class="wqb-breadcrumb-current">Practice Session</span>
                    </div>
                    <div class="wqb-nav-center">
                        <span class="wqb-nav-position">${e} of ${s}</span>
                    </div>
                    <div class="wqb-nav-right">
                        <button id="wqb-end-review" class="wqb-nav-btn wqb-nav-btn-review">End & Review</button>
                    </div>
                </div>
                
                ${M()}
                
                <div class="wqb-question-prompt">${I(t.prompt)}</div>
                <div class="wqb-answer-options">`;t.options.forEach((l,d)=>{o+=`<label class="wqb-option">
                                <input type="radio" name="wqb_answer" value="${d}" ${a&&r===d?"checked":""} ${a?"disabled":""}>
                                <span class="wqb-option-letter">${String.fromCharCode(65+d)}</span>
                                <span class="wqb-option-text">${Q(l)}</span>
                                <div class="wqb-option-distribution">
                                  <div class="wqb-distribution-bar-container">
                                    <div class="wqb-distribution-bar" data-option="${d}"></div>
                                  </div>
                                  <span class="wqb-distribution-percentage" data-option="${d}"></span>
                                </div>
                             </label>`}),o+=`</div>
                         <div class="wqb-practice-footer">
                            ${E(a)}
                         </div>
                      </div>`,c.html(o)}function S({question:t,current:e,total:s,is_attempted:a=!1,user_answer:r=null}){i.current=e,i.total=s;const o=Math.floor(k/60),l=k%60,d=`${o.toString().padStart(2,"0")}:${l.toString().padStart(2,"0")}`;let w=`
            <div class="wqb-practice-view wqb-mock-test-view" data-question-id="${t.id}">
                <div class="wqb-practice-header">
                    <div id="wqb-timer" class="wqb-timer-display">${d}</div>
                    <div class="wqb-question-counter">Question ${e} of ${s}</div>
                </div>
                
                <!-- Top Navigation Bar for Mock Test -->
                <div class="wqb-top-navigation">
                    <div class="wqb-nav-left">
                        <button class="wqb-breadcrumb-btn wqb-button-secondary" onclick="window.location.href='/staging-area'">
                            <span class="wqb-button-icon">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1 -2 2H5a2 2 0 0 1 -2 -2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <polyline points="9,22 9,12 15,12 15,22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                            </span>
                            Home
                        </button>
                        <div class="wqb-breadcrumb-separator">\u203A</div>
                        <span class="wqb-breadcrumb-current">Mock Test</span>
                    </div>
                    <div class="wqb-nav-center">
                        <span class="wqb-nav-position">${e} of ${s}</span>
                    </div>
                    <div class="wqb-nav-right">
                        <button id="wqb-end-review" class="wqb-nav-btn wqb-nav-btn-review">End & Review</button>
                    </div>
                </div>
                
                ${M()}
                
                <div class="wqb-question-prompt">${I(t.prompt)}</div>
                <div class="wqb-answer-options">`;t.options.forEach((p,f)=>{w+=`<label class="wqb-option">
                                <input type="radio" name="wqb_answer" value="${f}" ${a&&r===f?"checked":""} ${a?"disabled":""}>
                                <span class="wqb-option-letter">${String.fromCharCode(65+f)}</span>
                                <span class="wqb-option-text">${Q(p)}</span>
                                <div class="wqb-option-distribution">
                                  <div class="wqb-distribution-bar-container">
                                    <div class="wqb-distribution-bar" data-option="${f}"></div>
                                  </div>
                                  <span class="wqb-distribution-percentage" data-option="${f}"></span>
                                </div>
                             </label>`}),w+=`</div>
                         <div class="wqb-practice-footer">
                            ${E(a)}
                         </div>
                      </div>`,c.html(w)}function E(t){const e=i.current_index===0,s=i.current_index===i.total-1;let a='<div class="wqb-navigation-buttons">';return e||(a+='<button id="wqb-prev-question" class="wqb-button-secondary">Previous</button>'),t?s?i.mode==="mock"?a+='<button id="wqb-finish-test-btn" class="wqb-button-primary">Finish Test</button>':a+='<button id="wqb-finish-session-btn" class="wqb-button-primary">Finish Session</button>':a+='<button id="wqb-next-question" class="wqb-button-primary">Next Question</button>':(a+='<button id="wqb-submit-answer" class="wqb-button-primary">Submit Answer</button>',s||(a+='<button id="wqb-skip-question" class="wqb-button-secondary">Skip</button>')),a+="</div>",a}function M(){let t='<div class="wqb-question-overview"><div class="wqb-question-grid">',e=0,s=i.total-1;const a=J();if(i.total>a){const r=Math.floor(a/2);e=Math.max(0,i.current_index-r),s=Math.min(i.total-1,e+a-1),s-e+1<a&&(e=Math.max(0,s-a+1))}e>0&&(t+='<span class="wqb-question-ellipsis">...</span>');for(let r=e;r<=s;r++){const o=i.question_ids[r];let l="unanswered";i.question_states[o]==="correct"?l="correctly-answered":i.question_states[o]==="incorrect"&&(l="incorrectly-answered"),r===i.current_index&&(l+=" current"),t+=`<button class="wqb-question-nav-btn ${l}" data-question-index="${r}">${r+1}</button>`}return s<i.total-1&&(t+='<span class="wqb-question-ellipsis">...</span>'),t+="</div></div>",t}function U(){const t=c.find(".wqb-practice-view, .wqb-mock-test-view");t.length&&t.find(".wqb-question-overview").replaceWith(M())}function C(t,e,s=!1){n(".wqb-option input").prop("disabled",!0),n(`.wqb-option input[value="${t.correct_index}"]`).parent().addClass("correct-answer"),t.is_correct||n(`.wqb-option input[value="${e}"]`).parent().addClass("incorrect-answer"),s||n(".wqb-progress-tracker").text(`Correct: ${i.correct} / ${i.attempted}`),n(".wqb-option-distribution").css("display","flex");const a=n(".wqb-practice-view").data("question-id"),r=q=>{const T=q.answer_distribution;for(let m=0;m<5;m++){const W=T[m]||{count:0,correct_count:0,percentage:0},$=m===t.correct_index,z=m===Number.parseInt(e);let D="#6c757d";$?D="#28a745":z&&!$&&(D="#dc3545"),n(`.wqb-distribution-bar[data-option="${m}"]`).css({width:`${W.percentage}%`,"background-color":D});const j=n(`.wqb-distribution-percentage[data-option="${m}"]`);j.text(`${W.percentage}%`),j.removeClass("correct incorrect"),$?j.addClass("correct"):z&&!$&&j.addClass("incorrect")}};t.answer_distribution&&t.total_attempts!==void 0?r(t):n.ajax({url:b,type:"POST",data:{action:"wqb_get_question_analytics",nonce:u,question_id:a},dataType:"json",success:q=>{q.success?r(q.data):console.error("Failed to fetch question analytics:",q.data.message)},error:(q,T,m)=>{console.error("AJAX Error fetching question analytics:",{xhr:q,status:T,error:m})}});const o=[];for(let q=0;q<5;q++){const m=n(`.wqb-option input[value="${q}"]`).closest(".wqb-option").find(".wqb-option-text").text().trim();o[q]=m}const l=e!==null?`${String.fromCharCode(65+Number.parseInt(e))} \u2013 ${o[Number.parseInt(e)]||""}`:"Not answered",d=`${String.fromCharCode(65+t.correct_index)} \u2013 ${o[t.correct_index]||""}`,w=`
      <div class="wqb-question-analytics">
          <h4>Answer Analysis</h4>
          <div class="wqb-analytics-grid">
              <div class="wqb-analytics-item">
                  <span class="wqb-analytics-label">Your Answer:</span>
                  <span class="wqb-analytics-value ${t.is_correct?"correct":"incorrect"}">${l}</span>
              </div>
              <div class="wqb-analytics-item">
                  <span class="wqb-analytics-label">Correct Answer:</span>
                  <span class="wqb-analytics-value correct">${d}</span>
              </div>
              <div class="wqb-analytics-item wqb-analytics-full">
                  <span class="wqb-analytics-label">Explanation:</span>
<div class="wqb-analytics-explanation">${Y(t.explanation)}</div>
              </div>
          </div>
      </div>
    `;n(".wqb-practice-view").append(w),n(".wqb-practice-view").append(`
      <div class="wqb-feedback-section">
          <button class="wqb-feedback-toggle wqb-button-secondary">Submit Feedback</button>
          <div class="wqb-feedback-content" style="display:none;">
              <textarea id="wqb-feedback-text" placeholder="Type your feedback here..." rows="4"></textarea>
              <button id="wqb-submit-feedback" class="wqb-button-primary">Send Feedback</button>
          </div>
      </div>
    `);const f=i.current_index===i.total-1;let _='<div class="wqb-navigation-buttons">';i.current_index>0&&(_+='<button id="wqb-prev-question" class="wqb-button-secondary">Previous</button>'),f?i.mode==="mock"?_+='<button id="wqb-finish-test-btn" class="wqb-button-primary">Finish Test</button>':_+='<button id="wqb-finish-session-btn" class="wqb-button-primary">Finish Session</button>':_+='<button id="wqb-next-question" class="wqb-button-primary">Next Question</button>',_+="</div>",n(".wqb-practice-footer").html(_)}function nt(t){const e=t.total>0?Math.round(t.correct/t.total*100):0;let s=`
            <div class="wqb-mock-results">
                <h2>Mock Test Results</h2>
                <div class="wqb-results-summary">
                    <p><strong>Overall Score:</strong> ${t.correct} / ${t.total} (${e}%)</p>
                    <ul>
                        <li>Correct: ${t.correct}</li>
                        <li>Incorrect: ${t.incorrect}</li>
                        <li>Unanswered: ${t.unanswered}</li>
                    </ul>
                </div>
                <h3>Performance by Specialty</h3>
                <table class="wqb-results-table">
                    <thead>
                        <tr>
                            <th>Specialty</th>
                            <th>Performance</th>
                        </tr>
                    </thead>
                    <tbody>`;for(const a in t.specialty_stats){const r=t.specialty_stats[a],o=r.total>0?Math.round(r.correct/r.total*100):0;s+=`<tr>
                                <td>${a}</td>
                                <td>${r.correct} / ${r.total} (${o}%)</td>
                            </tr>`}s+=`</tbody>
                </table>
                <div class="wqb-actions">
                    <button id="wqb-return-to-lobby" class="wqb-button-primary">Return to Home</button>
                </div>
            </div>`,c.html(s)}function F(){g&&clearInterval(g),v?n.ajax({url:b,type:"POST",data:{action:"wqb_close_session",nonce:u,session_id:v},dataType:"json",success:t=>{A()},error:()=>{A()}}):A()}function A(){const t=i.attempted>0?Math.round(i.correct/i.attempted*100):0,e=`<div class="wqb-session-complete">
                                <h2>Session Complete!</h2>
                                <p>You scored ${i.correct} out of ${i.attempted} (${t}%).</p>
                                <button id="wqb-return-to-lobby" class="wqb-button-primary">Return to Home</button>
                            </div>`;c.html(e)}function dt(t,e=!0){if(!t)return"";const s=e?`
          <button id="wqb-start-new-session-lobby" class="wqb-button-secondary wqb-full-width">
            <span class="wqb-button-icon">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 5v14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M5 12h14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            Start New Session
          </button>
    `:"";return`
      <div class="wqb-active-session-dialog">
        <div class="wqb-session-status">
          <span class="wqb-session-badge wqb-session-active">Active Session</span>
          <span class="wqb-session-mode">${t.mode==="mock"?"Mock Test":"Practice"}</span>
        </div>
        <div class="wqb-session-progress">
          <div class="wqb-progress-info">
            <span class="wqb-progress-text">Progress: ${t.answered_count} of ${t.total_questions} questions</span>
            <span class="wqb-progress-percentage">${t.progress_percentage}%</span>
          </div>
          <div class="wqb-progress-bar">
            <div class="wqb-progress-fill" style="width: ${t.progress_percentage}%"></div>
          </div>
        </div>
        <div class="wqb-session-details">
          <span class="wqb-session-time">Started: ${new Date(t.created_at).toLocaleDateString()}</span>
          <span class="wqb-session-expires">Expires: ${new Date(t.expires_at).toLocaleDateString()}</span>
        </div>
        <div class="wqb-session-actions">
          <button class="wqb-resume-session-btn wqb-button-primary wqb-full-width" data-session-id="${t.session_id}">
            <span class="wqb-button-icon">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M5 12h14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M12 5l7 7-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            Resume Session
          </button>
          ${s}
        </div>
      </div>
    `}function ot(t){return!t||t.length===0?"":`
      <div class="wqb-active-sessions-container">
        <h3>Active Sessions</h3>
        <div class="wqb-active-sessions-list">
          ${t.map(s=>`
      <div class="wqb-active-session-item" data-session-id="${s.session_id}">
        <div class="wqb-session-header">
          <div class="wqb-session-info">
            <span class="wqb-session-badge wqb-session-active">Active Session</span>
            <span class="wqb-session-mode">${s.mode==="mock"?"Mock Test":"Practice"}</span>
          </div>
          <button class="wqb-close-session-btn" data-session-id="${s.session_id}" title="Close Session">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M18 6L6 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path d="M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
        <div class="wqb-session-progress">
          <div class="wqb-progress-info">
            <span class="wqb-progress-text">Progress: ${s.answered_count} of ${s.total_questions} questions</span>
            <span class="wqb-progress-percentage">${s.progress_percentage}%</span>
          </div>
          <div class="wqb-progress-bar">
            <div class="wqb-progress-fill" style="width: ${s.progress_percentage}%"></div>
          </div>
        </div>
        <div class="wqb-session-details">
          <span class="wqb-session-time">Started: ${new Date(s.created_at).toLocaleDateString()}</span>
          <span class="wqb-session-expires">Expires: ${new Date(s.expires_at).toLocaleDateString()}</span>
        </div>
        <div class="wqb-session-actions">
          <button class="wqb-resume-session-btn wqb-button-primary wqb-full-width" data-session-id="${s.session_id}">
            <span class="wqb-button-icon">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M5 12h14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M12 5l7 7-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            Resume Session
          </button>
        </div>
      </div>
    `).join("")}
        </div>
      </div>
    `}function h(){g&&clearInterval(g),i={},v=null,c.html('<div class="wqb-loader">Loading Question Bank...</div>'),n.ajax({url:b,type:"POST",data:{action:"wqb_get_lobby_data",nonce:u},dataType:"json",success:t=>{if(!t.success){c.html('<p class="wqb-error">Could not load the question bank. Please try again later.</p>');return}const e=t.data.stats,s=t.data.category_tree,a=t.data.heatmap_data,r=t.data.active_sessions;window.wqbCategoryTree=s;function o(d){let w="";return!d||d.length===0?"":(d.forEach(p=>{const f=p.children&&p.children.length>0;w+=`<li class="wqb-category-item">
                                    <div class="wqb-category-row">
                                        ${f?'<a href="#" class="wqb-category-toggle">+</a>':'<span class="wqb-category-toggle-placeholder"></span>'}
                                        <label>
                                            <input type="checkbox" class="${f?"wqb-category-checkbox-parent":""}" name="wqb_categories[]" value="${p.id}">
                                            ${p.name}
                                        </label>
                                        <span class="wqb-category-progress">${p.user_answered} of ${p.total_questions}</span>
                                    </div>`,f&&(w+=`<ul class="wqb-category-children">${o(p.children)}</ul>`),w+="</li>"}),w)}const l=`
                    <div class="wqb-lobby-redesigned">
                        <div class="wqb-breadcrumb-navigation">
                            <div class="wqb-breadcrumb-container">
                                <button class="wqb-breadcrumb-btn wqb-button-secondary" onclick="window.location.href='/staging-area'">
                                    <span class="wqb-button-icon">
                                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M3 9l9-7 9 7v11a2 2 0 0 1 -2 2H5a2 2 0 0 1 -2 -2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <polyline points="9,22 9,12 15,12 15,22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                        </svg>
                                    </span>
                                    Back to Home
                                </button>
                                <div class="wqb-breadcrumb-separator">\u203A</div>
                                <span class="wqb-breadcrumb-current">Question Bank</span>
                            </div>
                        </div>
                        
                        <div class="wqb-lobby-header">
                            <h1>Question bank</h1>
                            <p>Welcome to the main question bank.</p>
                            <div class="wqb-progress-bar-outer">
                                <div class="wqb-progress-bar-inner" style="width: ${e.user_average_score}%;"></div>
                            </div>
                            <p class="wqb-summary-text">
                                You've answered ${e.user_total_answered} questions with an average score of ${e.user_average_score}%. 
                                <a href="/userdash">More</a>
                            </p>
                             <p class="wqb-summary-text">
                               Please select question categories you want to practice from and proceed by clicking the Start Practice button.
                           
                            </p>
                               <p class="wqb-summary-text">
If no categories are selected, all questions will be included in the practice session by default.                           
                            </p>
                        </div>

                        <div class="wqb-lobby-main">
                            <div class="wqb-total-questions-indicator">
                                ${e.total_in_bank.toLocaleString()} questions in total
                            </div>
                            ${ot(r)}
                            <div class="wqb-activity-section wqb-lobby-heatmap-container">
                                <h2>Your Activity</h2>
                                <p class="wqb-section-description">Your question-answering activity over the last 6 months</p>
                                <div id="wqb-lobby-cal-heatmap"></div>
                                <div class="wqb-heatmap-legend">
                                    <span class="wqb-legend-label">Less</span>
                                    <div class="wqb-legend-scale">
                                        <div class="wqb-legend-box" style="background-color: #ebedf0;"></div>
                                        <div class="wqb-legend-box" style="background-color: #c6e48b;"></div>
                                        <div class="wqb-legend-box" style="background-color: #7bc96f;"></div>
                                        <div class="wqb-legend-box" style="background-color: #239a3b;"></div>
                                        <div class="wqb-legend-box" style="background-color: #196127;"></div>
                                    </div>
                                    <span class="wqb-legend-label">More</span>
                                </div>
                            </div>
                            <div class="wqb-category-tree">
                                <div class="wqb-category-header">
                                    <label class="wqb-select-all-label">
                                        <input type="checkbox" id="wqb-select-all-categories">
                                        <span>Select All Categories</span>
                                    </label>
                                    <div id="wqb-selected-questions-counter" class="wqb-selected-counter">0 unsolved questions selected</div>
                                </div>
                                <ul class="wqb-category-tree-root">
                                    ${o(s)}
                                </ul>
                            </div>
                        </div>

                        <div class="wqb-lobby-footer">
                             <h2>Question Selection</h2>
                             <div class="wqb-filters">
                                 <select name="wqb_status_filter" id="wqb-status-filter">
                                                                      <option value="unattempted">Show All New Questions</option>

                                     <option value="incorrect">Incorrect Only</option>
                                 </select>
                             </div>
                             <div class="wqb-actions">
                                 <button id="wqb-start-practice" class="wqb-button-primary">Start Practice</button>
                             </div>
                        </div>
                    </div>
                `;c.html(l),rt(a),y()}})}function rt(t){window.WQBHeatmapUtils&&window.WQBHeatmapUtils.initializeLobbyHeatmap?window.WQBHeatmapUtils.initializeLobbyHeatmap(t).then(()=>{window.WQBHeatmapUtils&&window.WQBHeatmapUtils.reinitializeHeatmapOnResize&&window.WQBHeatmapUtils.reinitializeHeatmapOnResize("#wqb-lobby-cal-heatmap",t,{})}).catch(e=>{console.error("Failed to initialize lobby heatmap:",e)}):console.error("WQBHeatmapUtils not available")}function ct(){const t=new URLSearchParams(window.location.search),e=t.get("wqb_review"),s=t.get("new_session");e!=="1"&&(s==="1"?L():h())}ct()});
