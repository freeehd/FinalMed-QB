jQuery(document).ready(function(i){const h=i("#wqb-importer-form"),_=i("#wqb-progress-container"),w=i("#wqb-progress-bar"),x=i("#wqb-progress-text"),d=i("#wqb-status-log"),p=h.find('input[type="submit"]');let f=0,m=0;h.on("submit",function(s){s.preventDefault();const e=i("#wqb_csv_file")[0];if(e.files.length===0){alert("Please select a file to import.");return}const t=e.files[0].name;if(t.split(".").pop().toLowerCase()!=="csv"){alert("Error: Please select a valid .csv file.");return}if(!confirm('Are you sure you want to import questions from "'+t+'"?'))return;p.prop("disabled",!0),w.css("width","0%"),x.text("0%"),d.html(""),_.show(),d.show(),a("Uploading file...","info");const r=e.files[0],o=new FileReader;o.onload=function(l){const u=l.target.result,c=F(u),g=new File([c],t,{type:"text/csv",lastModified:r.lastModified});T(g)},o.onerror=function(){a("Error reading file. Please try again.","error"),p.prop("disabled",!1)},o.readAsText(r,"UTF-8")});function F(s){a("Preprocessing CSV content for text formatting...","info");const e=y(s),t=[];return e.forEach((n,r)=>{if(r===0){t.push(n);return}const o=b(n);if(o.length>=8){const u=o.map((c,g)=>q(c,g)).map(c=>c.includes('"')||c.includes(",")||c.includes(`
`)||c.includes("\r")?'"'+c.replace(/"/g,'""')+'"':c).join(",");t.push(u)}else t.push(n)}),t.join(`
`)}function y(s){const e=[];let t="",n=!1,r=0;for(;r<s.length;){const o=s[r],l=s[r+1];if(o==='"')if(n&&l==='"'){t+='""',r+=2;continue}else n=!n;else if((o===`
`||o==="\r")&&!n){t.trim()&&e.push(t),t="",o==="\r"&&l===`
`&&r++,r++;continue}t+=o,r++}return t.trim()&&e.push(t),e}function b(s){const e=[];let t="",n=!1,r=0;for(;r<s.length;){const o=s[r],l=s[r+1];if(o==='"')if(n&&l==='"'){t+='"',r+=2;continue}else n=!n;else if(o===","&&!n){e.push(t),t="",r++;continue}else t+=o;r++}return e.push(t),e}function C(s){if(!s||s.trim()==="")return"";const e=s.split(`
`).filter(n=>n.trim()!=="");let t="";return e.forEach((n,r)=>{if(r===0){const o=n.replace(/(Correct answer: [A-E]\))/,"<strong>$1</strong>");t+=`
          <div class="explanation-block correct-answer">
            <span class="explanation-icon">\u2705</span>
            <div class="explanation-text">${o}</div>
          </div>`}else{const o=n.replace(/^([A-E]\))/,"<strong>$1</strong>");t+=`
          <div class="explanation-block incorrect-answer">
            <span class="explanation-icon">\u274C</span>
            <div class="explanation-text">${o}</div>
          </div>`}}),t}function q(s,e){if(![0,3,4,5,6,7,9].includes(e))return s;let n=s;return n=n.replace(/\\n/g,`
`).replace(/\\r\\n/g,`
`).replace(/\\r/g,`
`).replace(/\n\s*\n/g,`

`).replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#39;/g,"'").replace(/&nbsp;/g," ").replace(/[ \t]+/g," ").replace(/\n[ \t]+/g,`
`).replace(/[ \t]+\n/g,`
`).trim(),e===9&&(n=E(n)),n}function E(s){return s.replace(/\n{3,}/g,`

`).trim()}function T(s){const e=new FormData;e.append("action","wqb_handle_upload"),e.append("nonce",i("#wqb_importer_nonce").val()),e.append("csv_file",s),e.append("preserve_formatting","1"),i.ajax({url:ajaxurl,type:"POST",data:e,processData:!1,contentType:!1,dataType:"json",success:function(t){t.success?(f=t.data.total_rows,a(`File processed and uploaded successfully. Found ${f} questions to import.`,"success"),a("Text formatting has been preserved for proper display.","info"),a("Starting import process...","info"),v(0)):(a("Error: "+t.data.message,"error"),p.prop("disabled",!1))},error:function(t,n,r){a("An error occurred during upload: "+r,"error"),p.prop("disabled",!1)}})}function v(s){i.ajax({url:ajaxurl,type:"POST",data:{action:"wqb_process_chunk",nonce:i("#wqb_importer_nonce").val(),offset:s,preserve_formatting:"1"},dataType:"json",success:function(e){if(e.success){m+=e.data.processed_count;const t=f>0?Math.round(m/f*100):100;w.css("width",t+"%"),x.text(t+"%");let n=`Processed ${e.data.processed_count} rows. Total processed: ${m}/${f}.`;e.data.formatting_preserved&&(n+=" Text formatting preserved."),a(n,"info"),e.data.is_done?(a("Import complete! All questions imported with proper text formatting.","success"),a("Questions are now ready for use in practice tests, reviews, and mock tests.","success"),j()):v(e.data.new_offset)}else a("Error: "+e.data.message,"error"),p.prop("disabled",!1)},error:function(e,t,n){a("A critical error occurred while processing a chunk: "+n,"error"),p.prop("disabled",!1)}})}function j(){i.post(ajaxurl,{action:"wqb_cleanup_import",nonce:i("#wqb_importer_nonce").val(),validate_formatting:"1"},function(s){s&&s.success&&s.data&&s.data.formatting_validated&&a("Import cleanup completed. Text formatting validated across all views.","success")}),p.prop("disabled",!1)}function a(s,e){const t=new Date().toLocaleTimeString(),n=`<p class="log-${e}"><span class="log-timestamp">[${t}]</span> ${s}</p>`;d.append(n),d.scrollTop(d[0].scrollHeight)}function L(s){const e=[],t=s.match(/[^"]"[^",\n\r]/g);t&&e.push(`Found ${t.length} potentially unescaped quotes`);const n=s.match(/[^\\]\\n[^\\]/g);n&&e.push(`Found ${n.length} potentially malformed line breaks`);const r=s.split(`
`),o=10;let l=0;return r.forEach((u,c)=>{if(c===0||u.trim()==="")return;b(u).length<o&&l++}),l>0&&e.push(`Found ${l} rows with missing fields`),e}function k(s,e=200){return(s.length>e?s.substring(0,e)+"...":s).replace(/\n/g,"\u21B5").replace(/\t/g,"\u2192")}});
